(IN-PACKAGE :CCL)
;; this patch was saved with PWGL version 1.0 beta RC 18 (0.9.18-201)
(ASSERT-PATCH-SAVED-VERSION-NOT-NEWER-THAN (QUOTE ((0 9 18) 201)))
(LET ((WIN (MAKE-INSTANCE (QUOTE PWGL-PW-WINDOW) :PWGL-SUBVIEWS (LIST (MAKE-INSTANCE (QUOTE SCORE-EDITOR) :PWGL-SUBVIEWS (LIST (MAKE-INSTANCE (QUOTE PWGL-SCORE-SUBBOX) :R 1.0 :G 1.0 :B 1.0 :APPLICATION-WINDOW (LET ((WIN (MAKE-INSTANCE (QUOTE ENP-APPLICATION-WINDOW) :PAGE-LAYOUT-OBJECTS (LIST (MAKE-INSTANCE (QUOTE ENP-PAGE-LAYOUT-OBJECT) :PAGE-NUMBER :PAGE :MEASURES-PER-SYSTEM 2 :SYSTEMS-PER-PAGE 4) (MAKE-INSTANCE (QUOTE ENP-PAGE-LAYOUT-OBJECT) :PAGE-NUMBER :SCROLL :MEASURES-PER-SYSTEM 3 :SYSTEMS-PER-PAGE 4)) :ENP-PREFERENCES (MAKE-INSTANCE (QUOTE ENP-PREFERENCES-OBJECT) :DRAW-METRONOMES-P NIL) :PARTS (LIST (MAKE-INSTANCE (QUOTE PART) :Y 100.0 :DURATION 4.0 :INSTRUMENT (MAKE-INSTANCE (QUOTE INSTRUMENT) :SCORE-NAME "P" :WRITTEN-CLEF (MAKE-INSTANCE (QUOTE TREBLE-STAFF)) :SOUNDING-CLEF (MAKE-INSTANCE (QUOTE TREBLE-STAFF))) :STAFF (MAKE-INSTANCE (QUOTE TREBLE-STAFF)) :VOICE-LIST (LIST (MAKE-INSTANCE (QUOTE VOICE) :DURATION 4.0 :WIDTH 23.5 :MEASURES (LIST (MAKE-INSTANCE (QUOTE MEASURE) :X 7.5 :DURATION 4.0 :BEAT-OBJECTS (LIST (MAKE-INSTANCE (QUOTE BEAT) :SUB-BEAT-LIST (LIST (MAKE-INSTANCE (QUOTE BEAT) :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :STEM-X 8.265 :BEAMING-LEVEL 0 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE)))))) :UNIT-LENGTH 1) (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 1.0 :SUB-BEAT-LIST (LIST (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 1.0 :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :START-TIME 1.0 :STEM-X 12.265 :BEAMING-LEVEL 0 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE) :MIDI 64))))) :UNIT-LENGTH 1) (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 2.0 :SUB-BEAT-LIST (LIST (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 2.0 :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :START-TIME 2.0 :STEM-X 16.265 :BEAMING-LEVEL 0 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE) :MIDI 67))))) :UNIT-LENGTH 1) (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 3.0 :SUB-BEAT-LIST (LIST (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 3.0 :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :START-TIME 3.0 :STEM-X 20.265 :BEAMING-LEVEL 0 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE) :MIDI 71))))) :UNIT-LENGTH 1)) :TIME-SIGNATURE (MAKE-INSTANCE (QUOTE TIME-SIGNATURE) :HIGH 4 :X 4.0)))))) (MAKE-INSTANCE (QUOTE PART) :Y 93.375 :DURATION 4.0 :INSTRUMENT (MAKE-INSTANCE (QUOTE INSTRUMENT) :SCORE-NAME "P" :WRITTEN-CLEF (MAKE-INSTANCE (QUOTE TREBLE-STAFF)) :SOUNDING-CLEF (MAKE-INSTANCE (QUOTE TREBLE-STAFF))) :STAFF (MAKE-INSTANCE (QUOTE TREBLE-STAFF)) :VOICE-LIST (LIST (MAKE-INSTANCE (QUOTE VOICE) :DURATION 4.0 :WIDTH 23.5 :MEASURES (LIST (MAKE-INSTANCE (QUOTE MEASURE) :X 7.5 :DURATION 4.0 :BEAT-OBJECTS (LIST (MAKE-INSTANCE (QUOTE BEAT) :SUB-BEAT-LIST (LIST (MAKE-INSTANCE (QUOTE BEAT) :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :PLIST (LIST :TEMP-PITCHES NIL) :STEM-X 8.265 :BEAMING-LEVEL 0 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE) :MIDI 59)))) (MAKE-INSTANCE (QUOTE BEAT) :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :PLIST (LIST :TEMP-PITCHES NIL) :START-TIME 1.0 :STEM-X 12.265 :BEAMING-LEVEL 0 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE))))) (MAKE-INSTANCE (QUOTE BEAT) :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :PLIST (LIST :TEMP-PITCHES NIL) :START-TIME 2.0 :STEM-X 16.265 :BEAMING-LEVEL 0 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE))))) (MAKE-INSTANCE (QUOTE BEAT) :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :PLIST (LIST :TEMP-PITCHES NIL) :START-TIME 3.0 :STEM-X 20.265 :BEAMING-LEVEL 0 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE)))))) :UNIT-LENGTH 4)) :TIME-SIGNATURE (MAKE-INSTANCE (QUOTE TIME-SIGNATURE) :HIGH 4 :X 4.0)))))) (MAKE-INSTANCE (QUOTE PART) :Y 86.75 :DURATION 4.0 :INSTRUMENT (MAKE-INSTANCE (QUOTE INSTRUMENT) :SCORE-NAME "P" :WRITTEN-CLEF (MAKE-INSTANCE (QUOTE TREBLE-STAFF)) :SOUNDING-CLEF (MAKE-INSTANCE (QUOTE TREBLE-STAFF))) :STAFF (MAKE-INSTANCE (QUOTE TREBLE-STAFF)) :VOICE-LIST (LIST (MAKE-INSTANCE (QUOTE VOICE) :DURATION 4.0 :WIDTH 23.5 :MEASURES (LIST (MAKE-INSTANCE (QUOTE MEASURE) :X 7.5 :DURATION 4.0 :BEAT-OBJECTS (LIST (MAKE-INSTANCE (QUOTE BEAT) :SUB-BEAT-LIST (LIST (MAKE-INSTANCE (QUOTE BEAT) :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :STEM-X 8.265 :BEAMING-LEVEL 0 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE))))) (MAKE-INSTANCE (QUOTE BEAT) :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :START-TIME 1.0 :STEM-X 12.265 :BEAMING-LEVEL 0 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE))))) (MAKE-INSTANCE (QUOTE BEAT) :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :START-TIME 2.0 :STEM-X 16.265 :BEAMING-LEVEL 0 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE))))) (MAKE-INSTANCE (QUOTE BEAT) :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :START-TIME 3.0 :STEM-X 20.265 :BEAMING-LEVEL 0 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE)))))) :UNIT-LENGTH 4)) :TIME-SIGNATURE (MAKE-INSTANCE (QUOTE TIME-SIGNATURE) :HIGH 4 :X 4.0)))))) (MAKE-INSTANCE (QUOTE PART) :Y 80.125 :DURATION 0.0 :INSTRUMENT (MAKE-INSTANCE (QUOTE INSTRUMENT) :SCORE-NAME "P" :WRITTEN-CLEF (MAKE-INSTANCE (QUOTE TREBLE-STAFF)) :SOUNDING-CLEF (MAKE-INSTANCE (QUOTE TREBLE-STAFF))) :STAFF (MAKE-INSTANCE (QUOTE TREBLE-STAFF)) :VOICE-LIST (LIST (MAKE-INSTANCE (QUOTE VOICE) :DURATION 0.0 :WIDTH 23.5)))) :EDIT-MODE NIL :SCALEFX 2.6950007 :SCALEFY 2.6950007 :X 150 :Y 150 :TITLE "four-part" :X 150 :Y 150 :WIDTH 594 :HEIGHT 841))) WIN) :XSCALE-FC 5.625479 :YSCALE-FC 5.625479 :X-OFFSET -0.69362647 :Y-OFFSET 0.049394228 :NUM-OF-PARTS 4 :SCORE-DISPLAY-MODE :DEFAULT)) :X 2.8800000000000013D0 :Y 1.3039999999999999D0 :W 0.675999988079071D0 :H 1.047999992847442D0 :BOX-STRING "Score-Editor" :PWGL-OUTPUTS (LIST (MAKE-INSTANCE (QUOTE PWGL-OUTPUT) :BOX-STRING "score") (MAKE-INSTANCE (QUOTE PWGL-OUTPUT) :BOX-STRING "pitches") (MAKE-INSTANCE (QUOTE PWGL-OUTPUT) :BOX-STRING "rtms/times")) :BOX-LAYOUT (MAKE-INSTANCE (QUOTE PWGL-BOX-LAYOUT) :GROUPING-LIST (LIST 1) :ORIG-GROUPING-LIST (LIST 1) :BORDER 0.012) :PW-FUNCTION (QUOTE SCORE-EDITOR) :OPEN-STATE-W 0.675999988079071D0 :OPEN-STATE-H 1.047999992847442D0) (MAKE-INSTANCE (QUOTE PWGL-BOX) :PWGL-SUBVIEWS (LIST (MAKE-INSTANCE (QUOTE PWGL-VALUE-BOX-SUBVIEW) :BOX-STRING "score" :CURVAL "()" :VALUE-STRING "()") (MAKE-INSTANCE (QUOTE PWGL-MENUBOX-SUBVIEW) :BOX-STRING "incl/excl" :MINVAL 0 :MAXVAL 1 :MENU-LIST (LIST ":exclude" ":include") :MENU-LIST-STRING ":exclude") (MAKE-INSTANCE (QUOTE PWGL-DIALOG-BOX-SUBVIEW) :BOX-STRING "keywords" :CURVAL NIL :VALUE-STRING "nil")) :X 0.3400000000000003D0 :Y 0.28000031661987324D0 :W 0.7 :H 0.16 :BOX-STRING "enp-score-notation" :PWGL-OUTPUTS (LIST (MAKE-INSTANCE (QUOTE PWGL-OUTPUT))) :BOX-LAYOUT (MAKE-INSTANCE (QUOTE PWGL-BOX-LAYOUT) :GROUPING-LIST (LIST 1 2) :ORIG-GROUPING-LIST (LIST 1 2) :Y-PROPORTIONS (LIST 1 1) :BORDER 0.012) :PW-FUNCTION (QUOTE ENP-SCORE-NOTATION)) (MAKE-INSTANCE (QUOTE PWGL-BOX) :PWGL-SUBVIEWS (LIST (MAKE-INSTANCE (QUOTE PWGL-VALUE-BOX-SUBVIEW) :BOX-STRING "obj" :CURVAL "()" :VALUE-STRING "()" :CONNECTION NIL)) :X 1.1600000000000002D0 :Y 0.15600031661987313D0 :W 0.26 :H 0.1 :BOX-STRING "pwgl-pprint" :PWGL-OUTPUTS (LIST (MAKE-INSTANCE (QUOTE PWGL-OUTPUT))) :BOX-LAYOUT (MAKE-INSTANCE (QUOTE PWGL-BOX-LAYOUT) :GROUPING-LIST (LIST 1) :ORIG-GROUPING-LIST (LIST 1) :BORDER 0.012) :PW-FUNCTION (QUOTE PWGL-PPRINT)) (MAKE-INSTANCE (QUOTE PWGL-TEXT-BOX) :PWGL-SUBVIEWS (LIST (MAKE-INSTANCE (QUOTE PWGL-TEXT-SUBVIEW) :BOX-STRING "text" :APPLICATION-WINDOW (MAKE-INSTANCE (QUOTE PWGL-FRED-WINDOW) :TITLE "Text-Editor" :X 100 :Y 100 :WIDTH 686 :HEIGHT 269) :VALUE-STRING "(((((1 ((1 :NOTES (60))))
    (1 ((1 :START-TIME 1.0 :NOTES (60))))
    (1 ((1 :START-TIME 2.0 :NOTES (60))))
    (1 ((1 :START-TIME 3.0 :NOTES (60))))
    :TIME-SIGNATURE
    (4 4)))
  :INSTRUMENT
  NIL
  :STAFF
  :TREBLE-STAFF)
 ((((4 ((-1 :NOTES (60)))) :TIME-SIGNATURE (4 4))) :INSTRUMENT NIL :STAFF :TREBLE-STAFF)
 ((((4 ((-1 :NOTES (60)))) :TIME-SIGNATURE (4 4))) :INSTRUMENT NIL :STAFF :TREBLE-STAFF)
 ((((4 ((-1 :NOTES (60)))) :TIME-SIGNATURE (4 4))) :INSTRUMENT NIL :STAFF :TREBLE-STAFF))")) :X 0.8360000000000003D0 :Y 1.7480003166198732D0 :W 1.1480000119209293D0 :H 0.2840000014901163D0 :BOX-STRING "text-box" :PWGL-OUTPUTS (LIST (MAKE-INSTANCE (QUOTE PWGL-OUTPUT))) :BOX-LAYOUT (MAKE-INSTANCE (QUOTE PWGL-BOX-LAYOUT) :GROUPING-LIST (LIST 1) :ORIG-GROUPING-LIST (LIST 1) :X-PROPORTIONS (LIST (LIST 1)) :BORDER 0.012) :PW-FUNCTION (QUOTE TEXT-BOX) :OPEN-STATE-W 1.1480000119209293D0 :OPEN-STATE-H 0.2840000014901163D0) (MAKE-INSTANCE (QUOTE PWGL-PROGN) :PWGL-SUBVIEWS (LIST (MAKE-INSTANCE (QUOTE PWGL-VALUE-BOX-SUBVIEW) :BOX-STRING "patch" :CURVAL "()" :VALUE-STRING "()" :CONNECTION NIL) (MAKE-INSTANCE (QUOTE PWGL-VALUE-BOX-SUBVIEW) :BOX-STRING "patches" :CURVAL "()" :VALUE-STRING "()")) :X 1.3040000000000003D0 :Y -0.003999683380126129D0 :W 0.3 :H 0.17359999 :BOX-STRING "pwgl-progn" :PWGL-OUTPUTS (LIST (MAKE-INSTANCE (QUOTE PWGL-OUTPUT))) :BOX-LAYOUT (MAKE-INSTANCE (QUOTE PWGL-BOX-LAYOUT) :GROUPING-LIST (LIST 1 1) :ORIG-GROUPING-LIST (LIST 1) :EXTENSION-PATTERN (LIST 1) :BORDER 0.012) :PW-FUNCTION (QUOTE PWGL-PROGN) :CURRENT-EXTENSION-PATTERN-INDEX* 1) (MAKE-INSTANCE (QUOTE PWGL-CUSTOM-MENU-BOX) :PWGL-SUBVIEWS (LIST (MAKE-INSTANCE (QUOTE PWGL-CUSTOM-MENU-BOX-SUBVIEW) :R 1.0 :G 1.0 :B 1.0 :BOX-STRING "menu" :APPLICATION-WINDOW (MAKE-INSTANCE (QUOTE PWGL-FRED-WINDOW) :TITLE "Text-Editor" :X 181 :Y 22 :WIDTH 500 :HEIGHT 600) :CURVAL 2 :MINVAL 0 :MAXVAL 2 :VALUE-STRING "(
 (\"random\")

(\"SC 4-20\"
((* ?1  :harmony
   (?if (let ((h-midis (m ?1)))
          (and (setp h-midis :key #'mod12)
               (member (sc-name h-midis) '#.(ccl::all-subs '(4-20))))))
   )))

(\"SC 4-17\"
((* ?1  :harmony
   (?if (let ((h-midis (m ?1)))
          (and (setp h-midis :key #'mod12)
               (member (sc-name h-midis) '#.(ccl::all-subs '(4-17))))))
   )))
)" :MENU-LIST-STRING (LIST "SC 4-17" (LIST (LIST (QUOTE *) (QUOTE COMMON-LISP-USER::?1) :HARMONY (LIST (QUOTE COMMON-LISP-USER::?IF) (LIST (QUOTE LET) (LIST (LIST (QUOTE COMMON-LISP-USER::H-MIDIS) (LIST (QUOTE COMMON-LISP-USER::M) (QUOTE COMMON-LISP-USER::?1)))) (LIST (QUOTE AND) (LIST (QUOTE COMMON-LISP-USER::SETP) (QUOTE COMMON-LISP-USER::H-MIDIS) :KEY (LIST (QUOTE FUNCTION) (QUOTE COMMON-LISP-USER::MOD12))) (LIST (QUOTE MEMBER) (LIST (QUOTE COMMON-LISP-USER::SC-NAME) (QUOTE COMMON-LISP-USER::H-MIDIS)) (LIST (QUOTE QUOTE) (LIST (QUOTE |4-17|) (QUOTE |3-3A|) (QUOTE |3-11B|) (QUOTE |3-11A|) (QUOTE |2-5|) (QUOTE |3-3B|) (QUOTE |2-1|) (QUOTE |2-4|) (QUOTE |2-3|) (QUOTE |1-1|) (QUOTE |0-1|)))))))))))) :X 0.17977680716485622D0 :Y -0.38884635031873805D0 :W 1.0914792945366396D0 :H 0.12032558831467188D0 :BOX-STRING "menu-box" :PWGL-OUTPUTS (LIST (MAKE-INSTANCE (QUOTE PWGL-OUTPUT))) :BOX-LAYOUT (MAKE-INSTANCE (QUOTE PWGL-BOX-LAYOUT) :GROUPING-LIST (LIST 1) :ORIG-GROUPING-LIST (LIST 1) :BORDER 0.0084) :PW-FUNCTION (QUOTE MENU-BOX) :OPEN-STATE-W 1.0914792945366396D0 :OPEN-STATE-H 0.12032558831467188D0 :MENU-ITEM-FORMAT :TITLE-ITEM) (MAKE-INSTANCE (QUOTE PWGL-CUSTOM-MENU-BOX) :PWGL-SUBVIEWS (LIST (MAKE-INSTANCE (QUOTE PWGL-CUSTOM-MENU-BOX-SUBVIEW) :R 1.0 :G 1.0 :B 1.0 :BOX-STRING "menu" :APPLICATION-WINDOW (MAKE-INSTANCE (QUOTE PWGL-FRED-WINDOW) :TITLE "Text-Editor" :X 940 :Y 29 :WIDTH 500 :HEIGHT 600) :CURVAL 0 :MINVAL 0 :MAXVAL 5 :VALUE-STRING "(

(\"mel int rule for p1 and 3\"
 ((* ?1 ?2 :parts '(1 3)
    (?if (member (- (m ?2) (m ?1)) '(-1 -2 1 2 -3 -4 3 4)))
    )))

(\"3 voice harm int rule\"
((* ?1  :harmony
    (?if (let ((ints (m ?1 :complete? t :data-access :harm-int)))
            (?incase ints (member ints '((4 4) (5 6)) :test #'equal))))
       )))
(\"no adjacent equal chord ints\"
((* ?1 ?2 :harmony
   (?if (let ((ints1 (m ?1 :data-access :harm-int))
              (ints2 (m ?2 :data-access :harm-int :complete? t)))
          (?incase ints2  (not (equal ints1 ints2)))))
   )))

((\"no chord duplicates, note the 2-wildcard case\"
(* ?1 * ?2  :harmony (m ?2 :complete? t)
   (?if 
    (not (equal (m ?1) (m ?2))))
   )))

(\"no part-crossings\"
((* ?1 :harmony
   (?if 
    (every #'(lambda (n) 
               (cond ((> (partnum n) (partnum ?csv)) (< (m n) (m ?csv)))
                     ((< (partnum n) (partnum ?csv)) (> (m n) (m ?csv)))
                     (T T))) (m ?1 :object t)))
   )))

(\"no sop/bas mod12 cross-relation\"
((* ?1 ?2 :harmony  
   (?if (?incase (m ?2 :complete? t)
            (let* ((sop1 (m ?1 :data-access :max)) (sop2 (m ?2 :data-access :max))
                   (bas1 (m ?1 :data-access :min)) (bas2 (m ?2 :data-access :min)))
              (and (/= (mod12 sop1) (mod12 bas2)) 
                   (/= (mod12 sop2) (mod12 bas1))))))
   )))
)" :MENU-LIST-STRING (LIST "mel int rule for p1 and 3" (LIST (LIST (QUOTE *) (QUOTE COMMON-LISP-USER::?1) (QUOTE COMMON-LISP-USER::?2) :PARTS (LIST (QUOTE QUOTE) (LIST 1 3)) (LIST (QUOTE COMMON-LISP-USER::?IF) (LIST (QUOTE MEMBER) (LIST (QUOTE -) (LIST (QUOTE COMMON-LISP-USER::M) (QUOTE COMMON-LISP-USER::?2)) (LIST (QUOTE COMMON-LISP-USER::M) (QUOTE COMMON-LISP-USER::?1))) (LIST (QUOTE QUOTE) (LIST -1 -2 1 2 -3 -4 3 4))))))))) :X 1.8178756051520493D0 :Y -0.46800753388809513D0 :W 1.369902708927865D0 :H 0.12161974490571215D0 :BOX-STRING "menu-box" :PWGL-OUTPUTS (LIST (MAKE-INSTANCE (QUOTE PWGL-OUTPUT))) :BOX-LAYOUT (MAKE-INSTANCE (QUOTE PWGL-BOX-LAYOUT) :GROUPING-LIST (LIST 1) :ORIG-GROUPING-LIST (LIST 1) :BORDER 0.0084) :PW-FUNCTION (QUOTE MENU-BOX) :OPEN-STATE-W 1.369902708927865D0 :OPEN-STATE-H 0.12161974490571215D0 :MENU-ITEM-FORMAT :TITLE-ITEM) (MAKE-INSTANCE (QUOTE PWGL-ABSTRACTION-BOX) :R 0.65 :G 0.65 :B 0.65 :X 2.18D0 :Y 1.6960009460449217D0 :W 0.5799999904632567D0 :H 0.28900000037252927D0 :BOX-STRING "tutorial-example::three parts" :PW-FUNCTION (QUOTE PWGL-ABSTRACTION) :OPEN-STATE-W 0.5799999904632567D0 :OPEN-STATE-H 0.28900000037252927D0 :APPLICATION-WINDOW (LET ((WIN (MAKE-INSTANCE (QUOTE PWGL-ABSTRACTION-WINDOW) :PWGL-SUBVIEWS (LIST (MAKE-INSTANCE (QUOTE SCORE-EDITOR) :PWGL-SUBVIEWS (LIST (MAKE-INSTANCE (QUOTE PWGL-SCORE-SUBBOX) :R 1.0 :G 1.0 :B 1.0 :APPLICATION-WINDOW (LET ((WIN (MAKE-INSTANCE (QUOTE ENP-APPLICATION-WINDOW) :CATALOG-INFO (MAKE-INSTANCE (QUOTE ENP-CATALOG-INFO-OBJECT) :CATALOG-INFO-OBJECTS (LIST (MAKE-INSTANCE (QUOTE CATALOG-INFO::TITLE) :TEXT "Untitled") (MAKE-INSTANCE (QUOTE CATALOG-INFO::TITLE) :TEXT "Untitled") (MAKE-INSTANCE (QUOTE CATALOG-INFO::TITLE) :TEXT "Untitled") (MAKE-INSTANCE (QUOTE CATALOG-INFO::TITLE) :TEXT "Untitled") (MAKE-INSTANCE (QUOTE CATALOG-INFO::TITLE) :TEXT "Untitled") (MAKE-INSTANCE (QUOTE CATALOG-INFO::TITLE) :TEXT "Untitled") (MAKE-INSTANCE (QUOTE CATALOG-INFO::TITLE) :TEXT "Untitled") (MAKE-INSTANCE (QUOTE CATALOG-INFO::TITLE) :TEXT "Untitled"))) :STAFF-SPACING 5.025 :SPACING 0.37 :PARTS (LIST (MAKE-INSTANCE (QUOTE PART) :Y 100.0 :DURATION 4.0 :INSTRUMENT (MAKE-INSTANCE (QUOTE INSTRUMENT) :SCORE-NAME "Instrument" :WRITTEN-CLEF (MAKE-INSTANCE (QUOTE TREBLE-STAFF)) :SOUNDING-CLEF (MAKE-INSTANCE (QUOTE TREBLE-STAFF))) :STAFF (MAKE-INSTANCE (QUOTE TREBLE-STAFF)) :VOICE-LIST (LIST (MAKE-INSTANCE (QUOTE VOICE) :DURATION 4.0 :WIDTH 31.18 :MEASURES (LIST (MAKE-INSTANCE (QUOTE MEASURE) :X 7.5 :DURATION 4.0 :BEAT-OBJECTS (LIST (MAKE-INSTANCE (QUOTE BEAT) :SUB-BEAT-LIST (LIST (MAKE-INSTANCE (QUOTE BEAT) :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :LOCAL-STEM-DOWN-P T :STEM-X 7.575 :BEAMING-LEVEL 0 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE) :LOCAL-STEM-DOWN-P T :MIDI 76 :PMC-RESULTS (LIST 76)))))) :UNIT-LENGTH 1) (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 1.0 :SUB-BEAT-LIST (LIST (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 1.0 :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :START-TIME 1.0 :LOCAL-STEM-DOWN-P T :STEM-X 13.495 :BEAMING-LEVEL 0 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE) :LOCAL-STEM-DOWN-P T :MIDI 73 :PMC-RESULTS (LIST 73)))))) :UNIT-LENGTH 1) (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 2.0 :SUB-BEAT-LIST (LIST (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 2.0 :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :START-TIME 2.0 :LOCAL-STEM-DOWN-P T :STEM-X 19.415 :BEAMING-LEVEL 0 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE) :LOCAL-STEM-DOWN-P T :MIDI 74 :PMC-RESULTS (LIST 74)))))) :UNIT-LENGTH 1) (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 3.0 :SUB-BEAT-LIST (LIST (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 3.0 :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :START-TIME 3.0 :LOCAL-STEM-DOWN-P T :STEM-X 25.335001 :BEAMING-LEVEL 0 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE) :LOCAL-STEM-DOWN-P T :MIDI 80 :PMC-RESULTS (LIST 80)))))) :UNIT-LENGTH 1)) :TIME-SIGNATURE (MAKE-INSTANCE (QUOTE TIME-SIGNATURE) :HIGH 4 :X 4.0)))))) (MAKE-INSTANCE (QUOTE PART) :Y 93.975 :DURATION 4.0 :INSTRUMENT (MAKE-INSTANCE (QUOTE INSTRUMENT) :SCORE-NAME "Instrument" :WRITTEN-CLEF (MAKE-INSTANCE (QUOTE TREBLE-STAFF)) :SOUNDING-CLEF (MAKE-INSTANCE (QUOTE TREBLE-STAFF))) :STAFF (MAKE-INSTANCE (QUOTE TREBLE-STAFF)) :VOICE-LIST (LIST (MAKE-INSTANCE (QUOTE VOICE) :DURATION 4.0 :WIDTH 31.18 :MEASURES (LIST (MAKE-INSTANCE (QUOTE MEASURE) :X 7.5 :DURATION 4.0 :BEAT-OBJECTS (LIST (MAKE-INSTANCE (QUOTE BEAT) :SUB-BEAT-LIST (LIST (MAKE-INSTANCE (QUOTE BEAT) :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :STEM-X 8.265 :BEAMING-LEVEL 0 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE) :MIDI 69 :PMC-RESULTS (LIST 69)))))) :UNIT-LENGTH 1) (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 1.0 :SUB-BEAT-LIST (LIST (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 1.0 :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :START-TIME 1.0 :LOCAL-STEM-DOWN-P T :STEM-X 13.495 :BEAMING-LEVEL 0 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE) :LOCAL-STEM-DOWN-P T :MIDI 81 :PMC-RESULTS (LIST 81)))))) :UNIT-LENGTH 1) (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 2.0 :SUB-BEAT-LIST (LIST (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 2.0 :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :START-TIME 2.0 :LOCAL-STEM-DOWN-P T :STEM-X 19.415 :BEAMING-LEVEL 0 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE) :LOCAL-STEM-DOWN-P T :MIDI 77 :PMC-RESULTS (LIST 77)))))) :UNIT-LENGTH 1) (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 3.0 :SUB-BEAT-LIST (LIST (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 3.0 :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :START-TIME 3.0 :STEM-X 26.025 :BEAMING-LEVEL 0 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE) :MIDI 63 :PMC-RESULTS (LIST 63)))))) :UNIT-LENGTH 1)) :TIME-SIGNATURE (MAKE-INSTANCE (QUOTE TIME-SIGNATURE) :HIGH 4 :X 4.0)))))) (MAKE-INSTANCE (QUOTE PART) :Y 87.95 :DURATION 4.0 :INSTRUMENT (MAKE-INSTANCE (QUOTE INSTRUMENT) :SCORE-NAME "Instrument" :WRITTEN-CLEF (MAKE-INSTANCE (QUOTE TREBLE-STAFF)) :SOUNDING-CLEF (MAKE-INSTANCE (QUOTE TREBLE-STAFF))) :STAFF (MAKE-INSTANCE (QUOTE TREBLE-STAFF)) :VOICE-LIST (LIST (MAKE-INSTANCE (QUOTE VOICE) :DURATION 4.0 :WIDTH 31.18 :MEASURES (LIST (MAKE-INSTANCE (QUOTE MEASURE) :X 7.5 :DURATION 4.0 :BEAT-OBJECTS (LIST (MAKE-INSTANCE (QUOTE BEAT) :SUB-BEAT-LIST (LIST (MAKE-INSTANCE (QUOTE BEAT) :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :LOCAL-STEM-DOWN-P T :STEM-X 7.575 :BEAMING-LEVEL 0 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE) :LOCAL-STEM-DOWN-P T :MIDI 80 :PMC-RESULTS (LIST 80)))))) :UNIT-LENGTH 1) (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 1.0 :SUB-BEAT-LIST (LIST (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 1.0 :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :START-TIME 1.0 :STEM-X 14.185 :BEAMING-LEVEL 0 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE) :MIDI 68 :PMC-RESULTS (LIST 68)))))) :UNIT-LENGTH 1) (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 2.0 :SUB-BEAT-LIST (LIST (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 2.0 :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :START-TIME 2.0 :LOCAL-STEM-DOWN-P T :STEM-X 19.415 :BEAMING-LEVEL 0 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE) :LOCAL-STEM-DOWN-P T :MIDI 81 :PMC-RESULTS (LIST 81)))))) :UNIT-LENGTH 1) (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 3.0 :SUB-BEAT-LIST (LIST (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 3.0 :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :START-TIME 3.0 :STEM-X 26.025 :BEAMING-LEVEL 0 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE) :MIDI 64 :PMC-RESULTS (LIST 64)))))) :UNIT-LENGTH 1)) :TIME-SIGNATURE (MAKE-INSTANCE (QUOTE TIME-SIGNATURE) :HIGH 4 :X 4.0))))))) :SCALEFX 2.939999 :SCALEFY 2.939999 :TRANSLX 4.05 :TRANSLY -4.4 :X 150 :Y 150 :TITLE "Score" :X 150 :Y 150 :WIDTH 363 :HEIGHT 322))) WIN) :XSCALE-FC 5.972904 :YSCALE-FC 6.8577786 :NUM-OF-PARTS 3)) :X 1.7581696319384048D0 :Y 1.1412649965274566D0 :W 1.1366667 :H 0.7966666 :BOX-STRING "Score-editor" :PWGL-OUTPUTS (LIST (MAKE-INSTANCE (QUOTE PWGL-OUTPUT) :BOX-STRING "score") (MAKE-INSTANCE (QUOTE PWGL-OUTPUT) :BOX-STRING "pitches") (MAKE-INSTANCE (QUOTE PWGL-OUTPUT) :BOX-STRING "rtms/times")) :BOX-LAYOUT (MAKE-INSTANCE (QUOTE PWGL-BOX-LAYOUT) :GROUPING-LIST (LIST 1) :ORIG-GROUPING-LIST (LIST 1) :BORDER 0.012) :PW-FUNCTION (QUOTE SCORE-EDITOR)) (MAKE-INSTANCE (QUOTE PWGL-TEXT-BOX) :PWGL-SUBVIEWS (LIST (MAKE-INSTANCE (QUOTE PWGL-TEXT-SUBVIEW) :BOX-STRING "text" :APPLICATION-WINDOW (MAKE-INSTANCE (QUOTE PWGL-FRED-WINDOW) :TITLE "Text-Editor" :X 54 :Y 25 :WIDTH 550 :HEIGHT 589) :VALUE-STRING "(in-package :ccl)

(* ?1 ?2 :parts '(1 3)
    (?if (member (- (m ?2) (m ?1)) '(-1 -2 1 2 -3 -4 3 4)))
    \"mel int rule for parts 1 and 3\")

#|
(* ?1  :harmony
    (?if (let ((ints (m ?1 :complete? t :data-access :harm-int)))
            (?incase ints (member ints '((4 4) (5 6)) :test #'equal))))
       \"3 voice harm int rule\")
|#

(* ?1 ?2 :harmony
   (?if (let ((ints1 (m ?1 :data-access :harm-int))
              (ints2 (m ?2 :data-access :harm-int :complete? t)))
          (?incase ints2  (not (equal ints1 ints2)))))
   \"no adjacent equal chord ints\")

(* ?1 * ?2  :harmony (m ?2 :complete? t)
   (?if 
    (not (equal (m ?1) (m ?2))))
   \"no chord duplicates, note the 2-wildcard case\")

(* ?1 :harmony
   (?if 
    (every #'(lambda (n) 
               (cond ((> (partnum n) (partnum ?csv)) (< (m n) (m ?csv)))
                     ((< (partnum n) (partnum ?csv)) (> (m n) (m ?csv)))
                     (T T))) (m ?1 :object t)))
   \"no part-crossings\")

(* ?1 ?2 :harmony  
   (?if (?incase (m ?2 :complete? t)
            (let* ((sop1 (m ?1 :data-access :max)) (sop2 (m ?2 :data-access :max))
                   (bas1 (m ?1 :data-access :min)) (bas2 (m ?2 :data-access :min)))
              (and (/= (mod12 sop1) (mod12 bas2)) 
                   (/= (mod12 sop2) (mod12 bas1))))))
   \"no sop/bas mod12 cross-relation\")


(* ?1  :harmony
   (?if (let ((h-midis (m ?1)))
          (and (setp h-midis :key #'mod12)
               (member (sc-name h-midis) '#.(ccl::all-subs '(3-6))))))
   \"3-6\")
" :Y-OFFSET 0.108)) :X 0.07803336751755552D0 :Y 0.9852649965274565D0 :W 1.0889016251183672D0 :H 0.8912165583683906D0 :BOX-STRING "text-box" :PWGL-OUTPUTS (LIST (MAKE-INSTANCE (QUOTE PWGL-OUTPUT))) :BOX-LAYOUT (MAKE-INSTANCE (QUOTE PWGL-BOX-LAYOUT) :GROUPING-LIST (LIST 1) :ORIG-GROUPING-LIST (LIST 1) :BORDER 0.012) :PW-FUNCTION (QUOTE TEXT-BOX) :OPEN-STATE-W 1.0889016251183672D0 :OPEN-STATE-H 0.8912165583683906D0 :PWGL-BOOK-INFO (LIST :INCLUDE T :CAPTION "Here we have a real caption for the code!")) (MAKE-INSTANCE (QUOTE PMC-SCORE-BOX) :PWGL-SUBVIEWS (LIST (MAKE-INSTANCE (QUOTE PWGL-VALUE-BOX-SUBVIEW) :BOX-STRING "in-score" :CURVAL NIL :VALUE-STRING "()" :CONNECTION NIL) (MAKE-INSTANCE (QUOTE PWGL-VALUE-BOX-SUBVIEW) :BOX-STRING "res-score" :CURVAL NIL :VALUE-STRING "()") (MAKE-INSTANCE (QUOTE PWGL-VALUE-BOX-SUBVIEW) :BOX-STRING "search-space" :CURVAL (LIST (QUOTE |60_84|)) :VALUE-STRING "(60_84)") (MAKE-INSTANCE (QUOTE PWGL-VALUE-BOX-SUBVIEW) :R 0.85 :G 0.85 :B 0.85 :BOX-STRING "rules" :CURVAL NIL :VALUE-STRING "()" :CONNECTION NIL) (MAKE-INSTANCE (QUOTE PWGL-VALUE-BOX-SUBVIEW) :R 0.85 :G 0.85 :B 0.85 :BOX-STRING "heur-rules" :CURVAL NIL :VALUE-STRING "()") (MAKE-INSTANCE (QUOTE PWGL-VALUE-BOX-SUBVIEW) :R 0.85 :G 0.85 :B 0.85 :BOX-STRING "noatt-rules" :CURVAL NIL :VALUE-STRING "()") (MAKE-INSTANCE (QUOTE PWGL-VALUE-BOX-SUBVIEW) :R 0.85 :G 0.85 :B 0.85 :BOX-STRING "term-rules" :CURVAL "()" :VALUE-STRING "()") (MAKE-INSTANCE (QUOTE PWGL-MENUBOX-SUBVIEW) :BOX-STRING "rnd?" :MINVAL 0 :MAXVAL 1 :MENU-LIST :BOOLEAN-LIST :MENU-LIST-STRING "T") (MAKE-INSTANCE (QUOTE PWGL-VALUE-BOX-SUBVIEW) :BOX-STRING "sol-mode" :CURVAL 1 :MINVAL 1 :VALUE-STRING "1") (MAKE-INSTANCE (QUOTE PWGL-MENUBOX-SUBVIEW) :BOX-STRING "selection?" :CURVAL 1 :MINVAL 0 :MAXVAL 1 :MENU-LIST :BOOLEAN-LIST :MENU-LIST-STRING "()") (MAKE-INSTANCE (QUOTE PWGL-VALUE-BOX-SUBVIEW) :BOX-STRING "prep-fns" :CURVAL "()" :VALUE-STRING "()")) :X 2.0434596803074583D0 :Y -0.07906078717485032D0 :W 0.69 :H 0.33253333 :BOX-STRING "Multi-Score-PMC" :PWGL-OUTPUTS (LIST (MAKE-INSTANCE (QUOTE PWGL-OUTPUT))) :BOX-LAYOUT (MAKE-INSTANCE (QUOTE PWGL-BOX-LAYOUT) :GROUPING-LIST (LIST 2 1 2 2 4) :ORIG-GROUPING-LIST (LIST 2 1 2 2) :EXTENSION-PATTERN (LIST 4 4) :EXTENSION-LIMIT 15 :Y-PROPORTIONS (LIST 1 1 1 0 1) :BORDER 0.012) :PW-FUNCTION (QUOTE MULTI-SCORE-PMC) :INPUT-DRAW-MODE :PW-DOUBLE-INPUTS :CURRENT-EXTENSION-PATTERN-INDEX* 1 :CURRENT-EXTENSION-PATTERN-INDEX 0 :STORED-EXTEND-INPUTS-LIST (LIST (LIST (MAKE-INSTANCE (QUOTE PWGL-MENUBOX-SUBVIEW) :BOX-STRING "procs?" :MINVAL 0 :MAXVAL 1 :MENU-LIST :BOOLEAN-LIST :MENU-LIST-STRING "T") (MAKE-INSTANCE (QUOTE PWGL-VALUE-BOX-SUBVIEW) :BOX-STRING "p-cnt" :CURVAL 2 :MINVAL 1 :VALUE-STRING "2") (MAKE-INSTANCE (QUOTE PWGL-VALUE-BOX-SUBVIEW) :BOX-STRING "r-cnt" :CURVAL 2 :MINVAL 1 :VALUE-STRING "2") (MAKE-INSTANCE (QUOTE PWGL-VALUE-BOX-SUBVIEW) :BOX-STRING "schedules" :CURVAL "()" :VALUE-STRING "()"))) :ALL-SOLS (LIST (LIST (LIST (LIST 76 73 74 80) (LIST 69 81 77 63) (LIST 80 68 81 64)))) :RESULT-SLIDERS (LIST (MAKE-INSTANCE (QUOTE PWGL-PMC-SLIDER) :R 0.9 :G 0.9 :B 0.9 :X 2.0434596803074583D0 :Y -0.4915941300131377D0 :W 0.04 :H 0.04 :BOX-STRING "1" :PWGL-OUTPUTS (LIST (MAKE-INSTANCE (QUOTE PWGL-PMC-OUTPUT))) :PW-FUNCTION (QUOTE SLIDER) :CURVAL 12 :MINVAL 0 :MAXVAL 12 :NUMBER-OF-DECIMALS 0 :FORMAT-STRING "~1,2f" :VALUE-STRING "12" :PMC-RESULT (LIST (LIST (LIST 76 73 74 80) (LIST 69 81 77 63) (LIST 80 68 81 64)))))) (MAKE-INSTANCE (QUOTE PWGL-CUSTOM-MENU-BOX) :PWGL-SUBVIEWS (LIST (MAKE-INSTANCE (QUOTE PWGL-CUSTOM-MENU-BOX-SUBVIEW) :R 1.0 :G 1.0 :B 1.0 :BOX-STRING "menu" :APPLICATION-WINDOW (MAKE-INSTANCE (QUOTE PWGL-FRED-WINDOW) :TITLE "Text-Editor" :X 940 :Y 29 :WIDTH 500 :HEIGHT 600) :CURVAL 2 :MINVAL 0 :MAXVAL 5 :VALUE-STRING "(

(\"mel int rule for p1 and 3\"
 ((* ?1 ?2 :parts '(1 3)
    (?if (member (- (m ?2) (m ?1)) '(-1 -2 1 2 -3 -4 3 4)))
    )))

(\"3 voice harm int rule\"
((* ?1  :harmony
    (?if (let ((ints (m ?1 :complete? t :data-access :harm-int)))
            (?incase ints (member ints '((4 4) (5 6)) :test #'equal))))
       )))
(\"no adjacent equal chord ints\"
((* ?1 ?2 :harmony
   (?if (let ((ints1 (m ?1 :data-access :harm-int))
              (ints2 (m ?2 :data-access :harm-int :complete? t)))
          (?incase ints2  (not (equal ints1 ints2)))))
   )))

((\"no chord duplicates, note the 2-wildcard case\"
(* ?1 * ?2  :harmony (m ?2 :complete? t)
   (?if 
    (not (equal (m ?1) (m ?2))))
   )))

(\"no part-crossings\"
((* ?1 :harmony
   (?if 
    (every #'(lambda (n) 
               (cond ((> (partnum n) (partnum ?csv)) (< (m n) (m ?csv)))
                     ((< (partnum n) (partnum ?csv)) (> (m n) (m ?csv)))
                     (T T))) (m ?1 :object t)))
   )))

(\"no sop/bas mod12 cross-relation\"
((* ?1 ?2 :harmony  
   (?if (?incase (m ?2 :complete? t)
            (let* ((sop1 (m ?1 :data-access :max)) (sop2 (m ?2 :data-access :max))
                   (bas1 (m ?1 :data-access :min)) (bas2 (m ?2 :data-access :min)))
              (and (/= (mod12 sop1) (mod12 bas2)) 
                   (/= (mod12 sop2) (mod12 bas1))))))
   )))
)" :MENU-LIST-STRING (LIST "no adjacent equal chord ints" (LIST (LIST (QUOTE *) (QUOTE COMMON-LISP-USER::?1) (QUOTE COMMON-LISP-USER::?2) :HARMONY (LIST (QUOTE COMMON-LISP-USER::?IF) (LIST (QUOTE LET) (LIST (LIST (QUOTE COMMON-LISP-USER::INTS1) (LIST (QUOTE COMMON-LISP-USER::M) (QUOTE COMMON-LISP-USER::?1) :DATA-ACCESS :HARM-INT)) (LIST (QUOTE COMMON-LISP-USER::INTS2) (LIST (QUOTE COMMON-LISP-USER::M) (QUOTE COMMON-LISP-USER::?2) :DATA-ACCESS :HARM-INT :COMPLETE? T))) (LIST (QUOTE ?INCASE) (QUOTE COMMON-LISP-USER::INTS2) (LIST (QUOTE NOT) (LIST (QUOTE EQUAL) (QUOTE COMMON-LISP-USER::INTS1) (QUOTE COMMON-LISP-USER::INTS2))))))))))) :X 1.537875605152049D0 :Y -0.6800075338880953D0 :W 1.369902708927865D0 :H 0.12161974490571215D0 :BOX-STRING "menu-box" :PWGL-OUTPUTS (LIST (MAKE-INSTANCE (QUOTE PWGL-OUTPUT))) :BOX-LAYOUT (MAKE-INSTANCE (QUOTE PWGL-BOX-LAYOUT) :GROUPING-LIST (LIST 1) :ORIG-GROUPING-LIST (LIST 1) :BORDER 0.0084) :PW-FUNCTION (QUOTE MENU-BOX) :OPEN-STATE-W 1.369902708927865D0 :OPEN-STATE-H 0.12161974490571215D0 :MENU-ITEM-FORMAT :TITLE-ITEM) (MAKE-INSTANCE (QUOTE PWGL-CUSTOM-MENU-BOX) :PWGL-SUBVIEWS (LIST (MAKE-INSTANCE (QUOTE PWGL-CUSTOM-MENU-BOX-SUBVIEW) :R 1.0 :G 1.0 :B 1.0 :BOX-STRING "menu" :APPLICATION-WINDOW (MAKE-INSTANCE (QUOTE PWGL-FRED-WINDOW) :TITLE "Text-Editor" :X 100 :Y 100 :WIDTH 1340 :HEIGHT 774) :CURVAL 18 :MINVAL 0 :MAXVAL 18 :VALUE-STRING "
(

(\"3-1\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |3-1|))))))))) (\"3-2A\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |3-2A|))))))))) (\"3-2B\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |3-2B|))))))))) (\"3-3A\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |3-3A|))))))))) (\"3-3B\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |3-3B|))))))))) (\"3-4A\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |3-4A|))))))))) (\"3-4B\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |3-4B|))))))))) (\"3-5A\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |3-5A|))))))))) (\"3-5B\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |3-5B|))))))))) (\"3-6\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |3-6|))))))))) (\"3-7A\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |3-7A|))))))))) (\"3-7B\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |3-7B|))))))))) (\"3-8A\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |3-8A|))))))))) (\"3-8B\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |3-8B|))))))))) (\"3-9\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |3-9|))))))))) (\"3-10\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |3-10|))))))))) (\"3-11A\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |3-11A|))))))))) (\"3-11B\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |3-11B|))))))))) (\"3-12\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |3-12|)))))))))
)
" :MENU-LIST-STRING (LIST "3-12" (LIST (LIST (QUOTE *) (QUOTE COMMON-LISP-USER::?1) :HARMONY (LIST (QUOTE COMMON-LISP-USER::?IF) (LIST (QUOTE LET) (LIST (LIST (QUOTE COMMON-LISP-USER::H-MIDIS) (LIST (QUOTE COMMON-LISP-USER::M) (QUOTE COMMON-LISP-USER::?1)))) (LIST (QUOTE AND) (LIST (QUOTE COMMON-LISP-USER::SETP) (QUOTE COMMON-LISP-USER::H-MIDIS) :KEY (LIST (QUOTE FUNCTION) (QUOTE COMMON-LISP-USER::MOD12))) (LIST (QUOTE MEMBER) (LIST (QUOTE COMMON-LISP-USER::SC-NAME) (QUOTE COMMON-LISP-USER::H-MIDIS)) (LIST (QUOTE QUOTE) (VECTOR (QUOTE COMMON-LISP-USER::ALL-SUBS) (QUOTE |3-12|)))))))))))) :X 0.09599999999999875D0 :Y -0.08799886512756317D0 :W 0.5020000000000007D0 :H 0.14000000149011616D0 :BOX-STRING "menu-box" :PWGL-OUTPUTS (LIST (MAKE-INSTANCE (QUOTE PWGL-OUTPUT))) :BOX-LAYOUT (MAKE-INSTANCE (QUOTE PWGL-BOX-LAYOUT) :GROUPING-LIST (LIST 1) :ORIG-GROUPING-LIST (LIST 1) :BORDER 0.0084) :PW-FUNCTION (QUOTE MENU-BOX) :OPEN-STATE-W 0.5020000000000007D0 :OPEN-STATE-H 0.14000000149011616D0 :MENU-ITEM-FORMAT :TITLE-ITEM) (MAKE-INSTANCE (QUOTE PWGL-TEXT-BOX) :PWGL-SUBVIEWS (LIST (MAKE-INSTANCE (QUOTE PWGL-TEXT-SUBVIEW) :BOX-STRING "text" :APPLICATION-WINDOW (MAKE-INSTANCE (QUOTE PWGL-FRED-WINDOW) :TITLE "Text-Editor" :X 100 :Y 100 :WIDTH 500 :HEIGHT 600) :VALUE-STRING "(\"3-1\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |3-1|)))))))))")) :X 0.18799999999999972D0 :Y -0.4840002803802492D0 :W 0.9040000119209286D0 :H 0.14400000149011616D0 :BOX-STRING "text-box" :PWGL-OUTPUTS (LIST (MAKE-INSTANCE (QUOTE PWGL-OUTPUT))) :BOX-LAYOUT (MAKE-INSTANCE (QUOTE PWGL-BOX-LAYOUT) :GROUPING-LIST (LIST 1) :ORIG-GROUPING-LIST (LIST 1) :BORDER 0.012) :PW-FUNCTION (QUOTE TEXT-BOX) :OPEN-STATE-W 0.9040000119209286D0 :OPEN-STATE-H 0.14400000149011616D0) (MAKE-INSTANCE (QUOTE PWGL-CUSTOM-MENU-BOX) :PWGL-SUBVIEWS (LIST (MAKE-INSTANCE (QUOTE PWGL-CUSTOM-MENU-BOX-SUBVIEW) :R 1.0 :G 1.0 :B 1.0 :BOX-STRING "menu" :APPLICATION-WINDOW (MAKE-INSTANCE (QUOTE PWGL-FRED-WINDOW) :TITLE "Text-Editor" :X 9 :Y 22 :WIDTH 1431 :HEIGHT 852) :CURVAL 13 :MINVAL 0 :MAXVAL 42 :VALUE-STRING "
(
 (\"4-1\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-1|))))))))) (\"4-2A\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-2A|))))))))) (\"4-2B\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-2B|))))))))) (\"4-3\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-3|))))))))) (\"4-4A\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-4A|))))))))) (\"4-4B\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-4B|))))))))) (\"4-5A\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-5A|))))))))) (\"4-5B\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-5B|))))))))) (\"4-6\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-6|))))))))) (\"4-7\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-7|))))))))) (\"4-8\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-8|))))))))) (\"4-9\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-9|))))))))) (\"4-10\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-10|))))))))) (\"4-11A\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-11A|))))))))) (\"4-11B\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-11B|))))))))) (\"4-12A\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-12A|))))))))) (\"4-12B\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-12B|))))))))) (\"4-13A\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-13A|))))))))) (\"4-13B\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-13B|))))))))) (\"4-14A\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-14A|))))))))) (\"4-14B\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-14B|))))))))) (\"4-Z15A\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-Z15A|))))))))) (\"4-Z15B\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-Z15B|))))))))) (\"4-16A\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-16A|))))))))) (\"4-16B\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-16B|))))))))) (\"4-17\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-17|))))))))) (\"4-18A\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-18A|))))))))) (\"4-18B\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-18B|))))))))) (\"4-19A\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-19A|))))))))) (\"4-19B\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-19B|))))))))) (\"4-20\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-20|))))))))) (\"4-21\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-21|))))))))) (\"4-22A\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-22A|))))))))) (\"4-22B\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-22B|))))))))) (\"4-23\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-23|))))))))) (\"4-24\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-24|))))))))) (\"4-25\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-25|))))))))) (\"4-26\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-26|))))))))) (\"4-27A\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-27A|))))))))) (\"4-27B\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-27B|))))))))) (\"4-28\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-28|))))))))) (\"4-Z29A\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-Z29A|))))))))) (\"4-Z29B\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-Z29B|)))))))))
)" :MENU-LIST-STRING (LIST "4-11A" (LIST (LIST (QUOTE *) (QUOTE COMMON-LISP-USER::?1) :HARMONY (LIST (QUOTE COMMON-LISP-USER::?IF) (LIST (QUOTE LET) (LIST (LIST (QUOTE COMMON-LISP-USER::H-MIDIS) (LIST (QUOTE COMMON-LISP-USER::M) (QUOTE COMMON-LISP-USER::?1)))) (LIST (QUOTE AND) (LIST (QUOTE COMMON-LISP-USER::SETP) (QUOTE COMMON-LISP-USER::H-MIDIS) :KEY (LIST (QUOTE FUNCTION) (QUOTE COMMON-LISP-USER::MOD12))) (LIST (QUOTE MEMBER) (LIST (QUOTE COMMON-LISP-USER::SC-NAME) (QUOTE COMMON-LISP-USER::H-MIDIS)) (LIST (QUOTE QUOTE) (VECTOR (QUOTE COMMON-LISP-USER::ALL-SUBS) (QUOTE |4-11A|)))))))))))) :X 1.0839999999999997D0 :Y -0.052000280380249286D0 :W 0.25 :H 0.1 :BOX-STRING "menu-box" :PWGL-OUTPUTS (LIST (MAKE-INSTANCE (QUOTE PWGL-OUTPUT))) :BOX-LAYOUT (MAKE-INSTANCE (QUOTE PWGL-BOX-LAYOUT) :GROUPING-LIST (LIST 1) :ORIG-GROUPING-LIST (LIST 1) :BORDER 0.0084) :PW-FUNCTION (QUOTE MENU-BOX) :MENU-ITEM-FORMAT :TITLE-ITEM) (MAKE-INSTANCE (QUOTE PWGL-CUSTOM-MENU-BOX) :PWGL-SUBVIEWS (LIST (MAKE-INSTANCE (QUOTE PWGL-CUSTOM-MENU-BOX-SUBVIEW) :R 1.0 :G 1.0 :B 1.0 :BOX-STRING "menu" :APPLICATION-WINDOW (MAKE-INSTANCE (QUOTE PWGL-FRED-WINDOW) :TITLE "Text-Editor" :X 100 :Y 100 :WIDTH 500 :HEIGHT 600) :CURVAL 0 :MINVAL 0 :MAXVAL 0 :VALUE-STRING "(
(\"3-1\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |3-1|)))))))))
)")) :X 0.6359999999999997D0 :Y -0.3160002803802491D0 :Z -0.1 :W 0.81D0 :H 0.10000000149011612D0 :BOX-STRING "menu-box" :PWGL-OUTPUTS (LIST (MAKE-INSTANCE (QUOTE PWGL-OUTPUT))) :BOX-LAYOUT (MAKE-INSTANCE (QUOTE PWGL-BOX-LAYOUT) :GROUPING-LIST (LIST 1) :ORIG-GROUPING-LIST (LIST 1) :BORDER 0.0084) :PW-FUNCTION (QUOTE MENU-BOX) :OPEN-STATE-W 0.81D0 :OPEN-STATE-H 0.10000000149011612D0 :MENU-ITEM-FORMAT :TITLE-ITEM) (MAKE-INSTANCE (QUOTE PWGL-CUSTOM-MENU-BOX) :PWGL-SUBVIEWS (LIST (MAKE-INSTANCE (QUOTE PWGL-CUSTOM-MENU-BOX-SUBVIEW) :R 1.0 :G 1.0 :B 1.0 :BOX-STRING "menu" :APPLICATION-WINDOW (MAKE-INSTANCE (QUOTE PWGL-FRED-WINDOW) :TITLE "Text-Editor" :X 199 :Y 22 :WIDTH 514 :HEIGHT 227) :CURVAL 0 :MINVAL 0 :MAXVAL 1 :VALUE-STRING "(
 (\"4-1\" 
  ((* ?1 :harmony 
      (?if (let ((h-midis (m ?1))) 
             (and (setp h-midis :key (function mod12))
                  (member (sc-name h-midis) '#.(ccl::all-subs '(4-20)))))))))

(\"SC 4-17\"
 ((* ?1  :harmony
     (?if (let ((h-midis (m ?1)))
            (and (setp h-midis :key #'mod12)
                 (member (sc-name h-midis) '#.(ccl::all-subs '(4-17))))))
     )))
)")) :X 0.6480000000000001D0 :Y -0.788000280380249D0 :W 0.6180000000000003D0 :H 0.16000000149011617D0 :BOX-STRING "menu-box" :PWGL-OUTPUTS (LIST (MAKE-INSTANCE (QUOTE PWGL-OUTPUT))) :BOX-LAYOUT (MAKE-INSTANCE (QUOTE PWGL-BOX-LAYOUT) :GROUPING-LIST (LIST 1) :ORIG-GROUPING-LIST (LIST 1) :BORDER 0.0084) :PW-FUNCTION (QUOTE MENU-BOX) :OPEN-STATE-W 0.6180000000000003D0 :OPEN-STATE-H 0.16000000149011617D0 :MENU-ITEM-FORMAT :TITLE-ITEM)) :X 150 :Y 150 :TRANSLY 1.2560002901554106D0 :HITS 2 :CONNECTIONS (LIST (MAKE-INSTANCE (QUOTE PWGL-CONNECTION) :PWBOX1 8 :OUT-BOX 0 :PWBOX2 2 :INPUT-BOX 3 :DRAW-MODE :LINE :BEZIER-SELECTOR1 (MAKE-INSTANCE (QUOTE PWGL-BEZIER-SELECTOR) :POINT-NUM 1) :BEZIER-SELECTOR2 (MAKE-INSTANCE (QUOTE PWGL-BEZIER-SELECTOR) :POINT-NUM 2) :CONNECTION-POINTS (LIST (MAKE-INSTANCE (QUOTE PWGL-CONNECTION-POINT-SELECTOR) :DX 0.4122298397998265D0 :DY 0.30380307946167906D0)) :CONNECTION-POINT (MAKE-INSTANCE (QUOTE PWGL-CONNECTION-POINT-SELECTOR) :DX 0.0 :DY 0.0)) (MAKE-INSTANCE (QUOTE PWGL-CONNECTION) :PWBOX1 0 :OUT-BOX 0 :PWBOX2 2 :INPUT-BOX 0 :DRAW-MODE :LINE :BEZIER-SELECTOR1 (MAKE-INSTANCE (QUOTE PWGL-BEZIER-SELECTOR) :POINT-NUM 1) :BEZIER-SELECTOR2 (MAKE-INSTANCE (QUOTE PWGL-BEZIER-SELECTOR) :POINT-NUM 2) :CONNECTION-POINTS (LIST (MAKE-INSTANCE (QUOTE PWGL-CONNECTION-POINT-SELECTOR) :DX 0.0 :DY 0.0)) :CONNECTION-POINT (MAKE-INSTANCE (QUOTE PWGL-CONNECTION-POINT-SELECTOR) :DX 0.0 :DY 0.0))) :TITLE "tutorial-example::three parts" :X 150 :Y 150 :WIDTH 882 :HEIGHT 678))) WIN) :BOX-DOCUMENTATION "") (MAKE-INSTANCE (QUOTE SCORE-EDITOR) :PWGL-SUBVIEWS (LIST (MAKE-INSTANCE (QUOTE PWGL-SCORE-SUBBOX) :R 1.0 :G 1.0 :B 1.0 :APPLICATION-WINDOW (LET ((WIN (MAKE-INSTANCE (QUOTE ENP-APPLICATION-WINDOW) :CATALOG-INFO (MAKE-INSTANCE (QUOTE ENP-CATALOG-INFO-OBJECT) :CATALOG-INFO-OBJECTS (LIST (MAKE-INSTANCE (QUOTE CATALOG-INFO::TITLE) :TEXT "Untitled") (MAKE-INSTANCE (QUOTE CATALOG-INFO::TITLE) :TEXT "Untitled") (MAKE-INSTANCE (QUOTE CATALOG-INFO::TITLE) :TEXT "Untitled") (MAKE-INSTANCE (QUOTE CATALOG-INFO::TITLE) :TEXT "Untitled") (MAKE-INSTANCE (QUOTE CATALOG-INFO::TITLE) :TEXT "Untitled") (MAKE-INSTANCE (QUOTE CATALOG-INFO::TITLE) :TEXT "Untitled") (MAKE-INSTANCE (QUOTE CATALOG-INFO::TITLE) :TEXT "Untitled") (MAKE-INSTANCE (QUOTE CATALOG-INFO::TITLE) :TEXT "Untitled"))) :STAFF-SPACING 5.025 :SPACING 0.37 :PARTS (LIST (MAKE-INSTANCE (QUOTE PART) :Y 100.0 :DURATION 4.0 :INSTRUMENT (MAKE-INSTANCE (QUOTE INSTRUMENT) :SCORE-NAME "Instrument" :WRITTEN-CLEF (MAKE-INSTANCE (QUOTE TREBLE-STAFF)) :SOUNDING-CLEF (MAKE-INSTANCE (QUOTE TREBLE-STAFF))) :STAFF (MAKE-INSTANCE (QUOTE TREBLE-STAFF)) :VOICE-LIST (LIST (MAKE-INSTANCE (QUOTE VOICE) :DURATION 4.0 :WIDTH 31.18 :MEASURES (LIST (MAKE-INSTANCE (QUOTE MEASURE) :X 7.5 :DURATION 4.0 :BEAT-OBJECTS (LIST (MAKE-INSTANCE (QUOTE BEAT) :SUB-BEAT-LIST (LIST (MAKE-INSTANCE (QUOTE BEAT) :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :LOCAL-STEM-DOWN-P T :STEM-X 7.575 :BEAMING-LEVEL 0 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE) :LOCAL-STEM-DOWN-P T :MIDI 76))))) :UNIT-LENGTH 1) (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 1.0 :SUB-BEAT-LIST (LIST (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 1.0 :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :START-TIME 1.0 :LOCAL-STEM-DOWN-P T :STEM-X 13.495 :BEAMING-LEVEL 0 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE) :LOCAL-STEM-DOWN-P T :MIDI 74))))) :UNIT-LENGTH 1) (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 2.0 :SUB-BEAT-LIST (LIST (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 2.0 :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :START-TIME 2.0 :LOCAL-STEM-DOWN-P T :STEM-X 19.415 :BEAMING-LEVEL 0 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE) :LOCAL-STEM-DOWN-P T :MIDI 75))))) :UNIT-LENGTH 1) (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 3.0 :SUB-BEAT-LIST (LIST (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 3.0 :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :START-TIME 3.0 :LOCAL-STEM-DOWN-P T :STEM-X 25.335001 :BEAMING-LEVEL 0 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE) :LOCAL-STEM-DOWN-P T :MIDI 73))))) :UNIT-LENGTH 1)) :TIME-SIGNATURE (MAKE-INSTANCE (QUOTE TIME-SIGNATURE) :HIGH 4 :X 4.0)))))) (MAKE-INSTANCE (QUOTE PART) :Y 93.975 :DURATION 4.0 :INSTRUMENT (MAKE-INSTANCE (QUOTE INSTRUMENT) :SCORE-NAME "Instrument" :WRITTEN-CLEF (MAKE-INSTANCE (QUOTE TREBLE-STAFF)) :SOUNDING-CLEF (MAKE-INSTANCE (QUOTE TREBLE-STAFF))) :STAFF (MAKE-INSTANCE (QUOTE TREBLE-STAFF)) :VOICE-LIST (LIST (MAKE-INSTANCE (QUOTE VOICE) :DURATION 4.0 :WIDTH 31.18 :MEASURES (LIST (MAKE-INSTANCE (QUOTE MEASURE) :X 7.5 :DURATION 4.0 :BEAT-OBJECTS (LIST (MAKE-INSTANCE (QUOTE BEAT) :SUB-BEAT-LIST (LIST (MAKE-INSTANCE (QUOTE BEAT) :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :STEM-X 8.265 :BEAMING-LEVEL 0 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE) :MIDI 70))))) :UNIT-LENGTH 1) (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 1.0 :SUB-BEAT-LIST (LIST (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 1.0 :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :START-TIME 1.0 :STEM-X 14.185 :BEAMING-LEVEL 0 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE) :MIDI 70))))) :UNIT-LENGTH 1) (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 2.0 :SUB-BEAT-LIST (LIST (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 2.0 :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :START-TIME 2.0 :STEM-X 20.105 :BEAMING-LEVEL 0 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE) :MIDI 69))))) :UNIT-LENGTH 1) (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 3.0 :SUB-BEAT-LIST (LIST (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 3.0 :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :START-TIME 3.0 :STEM-X 26.025 :BEAMING-LEVEL 0 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE) :MIDI 69))))) :UNIT-LENGTH 1)) :TIME-SIGNATURE (MAKE-INSTANCE (QUOTE TIME-SIGNATURE) :HIGH 4 :X 4.0)))))) (MAKE-INSTANCE (QUOTE PART) :Y 87.95 :DURATION 4.0 :INSTRUMENT (MAKE-INSTANCE (QUOTE INSTRUMENT) :SCORE-NAME "Instrument" :WRITTEN-CLEF (MAKE-INSTANCE (QUOTE TREBLE-STAFF)) :SOUNDING-CLEF (MAKE-INSTANCE (QUOTE TREBLE-STAFF))) :STAFF (MAKE-INSTANCE (QUOTE TREBLE-STAFF)) :VOICE-LIST (LIST (MAKE-INSTANCE (QUOTE VOICE) :DURATION 4.0 :WIDTH 31.18 :MEASURES (LIST (MAKE-INSTANCE (QUOTE MEASURE) :X 7.5 :DURATION 4.0 :BEAT-OBJECTS (LIST (MAKE-INSTANCE (QUOTE BEAT) :SUB-BEAT-LIST (LIST (MAKE-INSTANCE (QUOTE BEAT) :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :STEM-X 8.265 :BEAMING-LEVEL 0 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE) :MIDI 65))))) :UNIT-LENGTH 1) (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 1.0 :SUB-BEAT-LIST (LIST (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 1.0 :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :START-TIME 1.0 :STEM-X 14.185 :BEAMING-LEVEL 0 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE) :MIDI 66))))) :UNIT-LENGTH 1) (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 2.0 :SUB-BEAT-LIST (LIST (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 2.0 :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :START-TIME 2.0 :STEM-X 20.105 :BEAMING-LEVEL 0 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE) :MIDI 64))))) :UNIT-LENGTH 1) (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 3.0 :SUB-BEAT-LIST (LIST (MAKE-INSTANCE (QUOTE BEAT) :START-TIME 3.0 :UNIT-LENGTH 1 :BEAT-CHORD (MAKE-INSTANCE (QUOTE CHORD) :START-TIME 3.0 :STEM-X 26.025 :BEAMING-LEVEL 0 :NOTES (LIST (MAKE-INSTANCE (QUOTE NOTE) :MIDI 65))))) :UNIT-LENGTH 1)) :TIME-SIGNATURE (MAKE-INSTANCE (QUOTE TIME-SIGNATURE) :HIGH 4 :X 4.0))))))) :SCALEFX 2.939999 :SCALEFY 2.939999 :TRANSLX 4.05 :TRANSLY -4.4 :X 150 :Y 150 :TITLE "Score" :X 150 :Y 150 :WIDTH 363 :HEIGHT 322))) WIN) :XSCALE-FC 5.972904 :YSCALE-FC 6.8577786 :NUM-OF-PARTS 3)) :X 0.16616963193840473D0 :Y 1.4332649965274565D0 :W 1.1366667 :H 0.7966666 :BOX-STRING "Score-editor" :PWGL-OUTPUTS (LIST (MAKE-INSTANCE (QUOTE PWGL-OUTPUT) :BOX-STRING "score") (MAKE-INSTANCE (QUOTE PWGL-OUTPUT) :BOX-STRING "pitches") (MAKE-INSTANCE (QUOTE PWGL-OUTPUT) :BOX-STRING "rtms/times")) :BOX-LAYOUT (MAKE-INSTANCE (QUOTE PWGL-BOX-LAYOUT) :GROUPING-LIST (LIST 1) :ORIG-GROUPING-LIST (LIST 1) :BORDER 0.012) :PW-FUNCTION (QUOTE SCORE-EDITOR)) (MAKE-INSTANCE (QUOTE PWGL-INPUT-MERGE) :PWGL-SUBVIEWS (LIST (MAKE-INSTANCE (QUOTE PWGL-INPUT-MERGE-SUBVIEW)) (MAKE-INSTANCE (QUOTE PWGL-INPUT-MERGE-SUBVIEW)) (MAKE-INSTANCE (QUOTE PWGL-INPUT-MERGE-SUBVIEW)) (MAKE-INSTANCE (QUOTE PWGL-INPUT-MERGE-SUBVIEW)) (MAKE-INSTANCE (QUOTE PWGL-INPUT-MERGE-SUBVIEW))) :X 1.9400000000000004D0 :Y 0.8600009460449223D0 :W 0.48199996 :H 0.07 :PWGL-OUTPUTS (LIST (MAKE-INSTANCE (QUOTE PWGL-OUTPUT))) :BOX-LAYOUT (MAKE-INSTANCE (QUOTE PWGL-BOX-LAYOUT) :GROUPING-LIST (LIST 5) :ORIG-GROUPING-LIST (LIST 2) :EXTENSION-PATTERN (LIST 1) :BORDER 0.012) :PW-FUNCTION (QUOTE PWGL-MERGE)) (MAKE-INSTANCE (QUOTE PWGL-TEXT-BOX) :PWGL-SUBVIEWS (LIST (MAKE-INSTANCE (QUOTE PWGL-TEXT-SUBVIEW) :BOX-STRING "text" :APPLICATION-WINDOW (MAKE-INSTANCE (QUOTE PWGL-FRED-WINDOW) :TITLE "Text-Editor" :X 398 :Y 30 :WIDTH 865 :HEIGHT 758) :VALUE-STRING "(defun make-two-chords (midis1 midis2)
  `(;part
    (;voice1
     (;measure1
      (;beat1 
       4
       (
	(1 :notes ,midis1))))
     (;measure2
      (;beat1 
       4
       (
	(1 :notes  ,midis2)))))))

(defun make-sc-choice (sc-name)
`(,(string sc-name)
  ((* ?1  :harmony
      (?if (let ((h-midis (m ?1)))
             (and (setp h-midis :key #'mod12)
                  (member (sc-name h-midis) '#.(ccl::all-subs (quote ,(sc-name))))))
      )))))

(defun make-sc-choice (sc-name)
`(,(string sc-name)))
  
(make-sc-choice (ccl::sc-name '(0 1 4)))

(defun make-sc-choice1 (sc-name)
`(,(string sc-name)
  (())))
  
(make-sc-choice1 (ccl::sc-name '(0 1 4)))

(defun make-sc-choice2 (sc-name)
`(,(string sc-name)
  ((* ?1 :harmony
      (?if (let ((h-midis (m ?1)))))))))
  
(make-sc-choice2 (ccl::sc-name '(0 1 4)))

(defun make-sc-choice3 (sc-name)
`(,(string sc-name)
  ((* ?1 :harmony
      (?if (let ((h-midis (m ?1)))))))))
  
(make-sc-choice3 (ccl::sc-name '(0 1 4)))

(defun make-sc-choice4 (my-sc-name)
`(,(string my-sc-name)
  ((* ?1 :harmony
      (?if (let ((h-midis (m ?1)))))))))
  
(make-sc-choice4 (ccl::sc-name '(0 1 4)))


;;; note what happens when you take away the period below!
(defun make-sc-choice5 (my-sc-name)
`(,(string my-sc-name)
  ((* ?1 :harmony
      (?if (let ((h-midis (m ?1)))
             (and (setp h-midis :key #'mod12)
                  (member (sc-name h-midis) '#.(ccl::all-subs (quote my-sc-name))))))))))
  
(make-sc-choice5 (ccl::sc-name '(0 1 4)))


;;; works! 
(defun make-sc-choice6 (my-sc-name)
`(,(string my-sc-name)
  ((* ?1 :harmony
      (?if (let ((h-midis (m ?1)))
             (and (setp h-midis :key #'mod12)
                  (member (sc-name h-midis) '#(ccl::all-subs ,my-sc-name)))))))))
  
(make-sc-choice6 (ccl::sc-name '(0 3 6)))

(defun make-sc-choice7 (my-sc-name)
`(,(string my-sc-name)
  ((* ?1 :harmony
      (?if (let ((h-midis (m ?1)))
             (and (setp h-midis :key #'mod12)
                  (member (sc-name h-midis) '#(ccl::all-subs ,(quote (symbol my-sc-name)))))))))))
  
(make-sc-choice7 (ccl::sc-name '(0 3 6)))")) :X 3.7479999999999998D0 :Y 1.456001134872436D0 :W 0.7320000119209285D0 :H 0.3240000014901159D0 :BOX-STRING "text-box" :PWGL-OUTPUTS (LIST (MAKE-INSTANCE (QUOTE PWGL-OUTPUT))) :BOX-LAYOUT (MAKE-INSTANCE (QUOTE PWGL-BOX-LAYOUT) :GROUPING-LIST (LIST 1) :ORIG-GROUPING-LIST (LIST 1) :BORDER 0.012) :PW-FUNCTION (QUOTE TEXT-BOX) :OPEN-STATE-W 0.7320000119209285D0 :OPEN-STATE-H 0.3240000014901159D0) (MAKE-INSTANCE (QUOTE PWGL-COMMENT-BOX) :PWGL-SUBVIEWS (LIST (MAKE-INSTANCE (QUOTE PWGL-COMMENT-BOX-SUBVIEW) :R 1.0 :G 1.0 :B 1.0 :BOX-STRING "auto-evaluate" :APPLICATION-WINDOW (MAKE-INSTANCE (QUOTE PWGL-FRED-WINDOW) :TITLE "Text-Editor" :X 100 :Y 100 :WIDTH 500 :HEIGHT 600) :VALUE-STRING "There's a great \"MACRO-like\" bit hidden inside the abstraction!")) :X 3.1959999999999998D0 :Y 1.6520011348724362D0 :W 1.5320000119209292D0 :H 0.12000000149011569D0 :BOX-STRING "1" :PWGL-OUTPUTS (LIST (MAKE-INSTANCE (QUOTE PWGL-OUTPUT))) :BOX-LAYOUT (MAKE-INSTANCE (QUOTE PWGL-BOX-LAYOUT) :GROUPING-LIST (LIST 1) :ORIG-GROUPING-LIST (LIST 1) :BORDER 0.0084) :PW-FUNCTION (QUOTE PWGL-COMMENT-BOX) :OPEN-STATE-W 1.5320000119209292D0 :OPEN-STATE-H 0.12000000149011569D0) (MAKE-INSTANCE (QUOTE PWGL-CODE-BOX) :PWGL-SUBVIEWS (LIST (MAKE-INSTANCE (QUOTE PWGL-FREE-VALUE-BOX-SUBVIEW) :BOX-STRING "scname" :CONNECTION NIL :ARG-NAME (QUOTE SCNAME) :ARG-TYPE :VAR)) :X 4.064D0 :Y 0.32000113487243676D0 :W 0.42399999046325654D0 :H 0.1 :BOX-STRING "code-box" :PWGL-OUTPUTS (LIST (MAKE-INSTANCE (QUOTE PWGL-OUTPUT))) :BOX-LAYOUT (MAKE-INSTANCE (QUOTE PWGL-BOX-LAYOUT) :GROUPING-LIST (LIST 1) :ORIG-GROUPING-LIST (LIST 1) :BORDER 0.012) :PW-FUNCTION (QUOTE CODE-BOX) :OPEN-STATE-W 0.42399999046325654D0 :OPEN-STATE-H 0.12000000149011614D0 :TEXT "

(cl-user::make-sc-choice6 scname)") (MAKE-INSTANCE (QUOTE PWGL-BOX) :PWGL-SUBVIEWS (LIST (MAKE-INSTANCE (QUOTE PWGL-NUMBOX-SUBVIEW) :BOX-STRING "card" :CURVAL 4 :MINVAL 1 :MAXVAL 12 :VALUE-STRING "4")) :X 2.98D0 :Y 0.09200113487243567D0 :W 0.26 :H 0.1 :BOX-STRING "scs/card" :PWGL-OUTPUTS (LIST (MAKE-INSTANCE (QUOTE PWGL-OUTPUT))) :BOX-LAYOUT (MAKE-INSTANCE (QUOTE PWGL-BOX-LAYOUT) :GROUPING-LIST (LIST 1) :ORIG-GROUPING-LIST (LIST 1) :BORDER 0.012) :PW-FUNCTION (QUOTE SCS/CARD)) (MAKE-INSTANCE (QUOTE PWGL-BOX) :PWGL-SUBVIEWS (LIST (MAKE-INSTANCE (QUOTE PWGL-VALUE-BOX-SUBVIEW) :BOX-STRING "orig-n" :CURVAL 1 :VALUE-STRING "1") (MAKE-INSTANCE (QUOTE PWGL-VALUE-BOX-SUBVIEW) :BOX-STRING "orig-list" :CURVAL "()" :VALUE-STRING "()")) :X 3.7960000000000003D0 :Y 0.6320011348724366D0 :W 0.52 :H 0.1 :BOX-STRING "nth" :PWGL-OUTPUTS (LIST (MAKE-INSTANCE (QUOTE PWGL-OUTPUT))) :BOX-LAYOUT (MAKE-INSTANCE (QUOTE PWGL-BOX-LAYOUT) :GROUPING-LIST (LIST 2) :ORIG-GROUPING-LIST (LIST 2) :BORDER 0.012) :PW-FUNCTION (QUOTE NTH)) (MAKE-INSTANCE (QUOTE PWGL-TEXT-BOX) :PWGL-SUBVIEWS (LIST (MAKE-INSTANCE (QUOTE PWGL-TEXT-SUBVIEW) :BOX-STRING "text" :APPLICATION-WINDOW (MAKE-INSTANCE (QUOTE PWGL-FRED-WINDOW) :TITLE "Text-Editor" :X 100 :Y 100 :WIDTH 1078 :HEIGHT 473) :VALUE-STRING "((\"4-1\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-1|))))))))) (\"4-2A\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-2A|))))))))) (\"4-2B\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-2B|))))))))) (\"4-3\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-3|))))))))) (\"4-4A\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-4A|))))))))) (\"4-4B\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-4B|))))))))) (\"4-5A\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-5A|))))))))) (\"4-5B\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-5B|))))))))) (\"4-6\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-6|))))))))) (\"4-7\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-7|))))))))) (\"4-8\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-8|))))))))) (\"4-9\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-9|))))))))) (\"4-10\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-10|))))))))) (\"4-11A\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-11A|))))))))) (\"4-11B\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-11B|))))))))) (\"4-12A\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-12A|))))))))) (\"4-12B\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-12B|))))))))) (\"4-13A\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-13A|))))))))) (\"4-13B\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-13B|))))))))) (\"4-14A\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-14A|))))))))) (\"4-14B\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-14B|))))))))) (\"4-Z15A\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-Z15A|))))))))) (\"4-Z15B\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-Z15B|))))))))) (\"4-16A\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-16A|))))))))) (\"4-16B\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-16B|))))))))) (\"4-17\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-17|))))))))) (\"4-18A\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-18A|))))))))) (\"4-18B\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-18B|))))))))) (\"4-19A\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-19A|))))))))) (\"4-19B\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-19B|))))))))) (\"4-20\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-20|))))))))) (\"4-21\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-21|))))))))) (\"4-22A\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-22A|))))))))) (\"4-22B\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-22B|))))))))) (\"4-23\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-23|))))))))) (\"4-24\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-24|))))))))) (\"4-25\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-25|))))))))) (\"4-26\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-26|))))))))) (\"4-27A\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-27A|))))))))) (\"4-27B\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-27B|))))))))) (\"4-28\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-28|))))))))) (\"4-Z29A\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-Z29A|))))))))) (\"4-Z29B\" ((* common-lisp-user::?1 :harmony (common-lisp-user::?if (let ((common-lisp-user::h-midis (common-lisp-user::m common-lisp-user::?1))) (and (common-lisp-user::setp common-lisp-user::h-midis :key (function common-lisp-user::mod12)) (member (common-lisp-user::sc-name common-lisp-user::h-midis) (quote #(all-subs |4-Z29B|))))))))))" :CONNECTION NIL)) :X 3.8360000000000003D0 :Y -0.6159988651275636D0 :W 0.3 :H 0.1 :BOX-STRING "text-box" :PWGL-OUTPUTS (LIST (MAKE-INSTANCE (QUOTE PWGL-OUTPUT))) :BOX-LAYOUT (MAKE-INSTANCE (QUOTE PWGL-BOX-LAYOUT) :GROUPING-LIST (LIST 1) :ORIG-GROUPING-LIST (LIST 1) :BORDER 0.012) :PW-FUNCTION (QUOTE TEXT-BOX)) (MAKE-INSTANCE (QUOTE PW-BOX-MAP-BUFFER) :PWGL-SUBVIEWS (LIST (MAKE-INSTANCE (QUOTE PWGL-VALUE-BOX-SUBVIEW) :BOX-STRING "list" :CURVAL (LIST 0 1) :VALUE-STRING "(0 1)" :CONNECTION NIL)) :X 3.3600000000000003D0 :Y -0.0759988651275636D0 :W 0.325 :H 0.1 :BOX-STRING "pwgl-enum" :PWGL-OUTPUTS (LIST (MAKE-INSTANCE (QUOTE PWGL-OUTPUT))) :BOX-LAYOUT (MAKE-INSTANCE (QUOTE PWGL-BOX-LAYOUT) :GROUPING-LIST (LIST 1) :ORIG-GROUPING-LIST (LIST 1) :EXTENSION-PATTERN (LIST 1) :BORDER 0.012) :PW-FUNCTION (QUOTE PWGL-ENUM)) (MAKE-INSTANCE (QUOTE PW-BOX-MAP) :PWGL-SUBVIEWS (LIST (MAKE-INSTANCE (QUOTE PWGL-VALUE-BOX-SUBVIEW) :BOX-STRING "enum" :CURVAL "()" :VALUE-STRING "()" :CONNECTION NIL) (MAKE-INSTANCE (QUOTE PWGL-VALUE-BOX-SUBVIEW) :BOX-STRING "patch" :CURVAL "()" :VALUE-STRING "()" :CONNECTION NIL)) :X 3.534999997019768D0 :Y -0.26799887704849246D0 :W 0.52 :H 0.1 :BOX-STRING "pwgl-map" :PWGL-OUTPUTS (LIST (MAKE-INSTANCE (QUOTE PWGL-OUTPUT))) :BOX-LAYOUT (MAKE-INSTANCE (QUOTE PWGL-BOX-LAYOUT) :GROUPING-LIST (LIST 2) :ORIG-GROUPING-LIST (LIST 2) :EXTENSION-PATTERN (LIST 1) :EXTENSION-LIMIT 5 :BORDER 0.012) :PW-FUNCTION (QUOTE PWGL-MAP)) (MAKE-INSTANCE (QUOTE PWGL-BOX) :PWGL-SUBVIEWS (LIST (MAKE-INSTANCE (QUOTE PWGL-VALUE-BOX-SUBVIEW) :BOX-STRING "midis" :CURVAL (LIST 60 61) :VALUE-STRING "(60 61)")) :X 4.324190801007396D0 :Y 0.9195677193524263D0 :W 0.26 :H 0.1 :BOX-STRING "sc-name" :PWGL-OUTPUTS (LIST (MAKE-INSTANCE (QUOTE PWGL-OUTPUT))) :BOX-LAYOUT (MAKE-INSTANCE (QUOTE PWGL-BOX-LAYOUT) :GROUPING-LIST (LIST 1) :ORIG-GROUPING-LIST (LIST 1) :BORDER 0.012) :PW-FUNCTION (QUOTE SC-NAME)) (MAKE-INSTANCE (QUOTE PWGL-BOX) :PWGL-SUBVIEWS (LIST (MAKE-INSTANCE (QUOTE PWGL-VALUE-BOX-SUBVIEW) :BOX-STRING "argument" :CURVAL "()" :VALUE-STRING "()" :CONNECTION NIL)) :X 4.6761838992872535D0 :Y 0.7189316533329078D0 :Z -0.1 :W 0.26 :H 0.1 :BOX-STRING "list" :PWGL-OUTPUTS (LIST (MAKE-INSTANCE (QUOTE PWGL-OUTPUT))) :BOX-LAYOUT (MAKE-INSTANCE (QUOTE PWGL-BOX-LAYOUT) :GROUPING-LIST (LIST 1) :ORIG-GROUPING-LIST (LIST 1) :EXTENSION-PATTERN (LIST 1) :BORDER 0.012) :PW-FUNCTION (QUOTE LIST)) (MAKE-INSTANCE (QUOTE PWGL-BOX) :PWGL-SUBVIEWS (LIST (MAKE-INSTANCE (QUOTE PWGL-HIERARCHICAL-MENUBOX-SUBVIEW) :BOX-STRING "sc-name" :MINVAL 0 :MAXVAL 18 :MENU-LIST :SC-NAME-LIST :MENU-LIST-STRING (LIST "0-1") :CURVAL2 3 :MENU-TITLES :SC-NAME-TITLE-LIST :MAXVAL2 12) (MAKE-INSTANCE (QUOTE PWGL-NUMBOX-SUBVIEW) :BOX-STRING "card" :CURVAL 1 :MINVAL 1 :MAXVAL 12 :VALUE-STRING "1")) :X 1.4941662908373457D0 :Y 0.21910145377551116D0 :W 0.54 :H 0.1 :BOX-STRING "sub/supersets" :PWGL-OUTPUTS (LIST (MAKE-INSTANCE (QUOTE PWGL-OUTPUT))) :BOX-LAYOUT (MAKE-INSTANCE (QUOTE PWGL-BOX-LAYOUT) :GROUPING-LIST (LIST 2) :ORIG-GROUPING-LIST (LIST 2) :BORDER 0.012) :PW-FUNCTION (QUOTE SUB/SUPERSETS))) :X 5 :Y 5 :SCALEFX 0.5681929720038871D0 :SCALEFY 0.5681929720038871D0 :TRANSLX -0.1495526684969522D0 :TRANSLY 0.7875987543463692D0 :HITS 2 :CONNECTIONS (LIST (MAKE-INSTANCE (QUOTE PWGL-CONNECTION) :PWBOX1 18 :OUT-BOX 0 :PWBOX2 19 :INPUT-BOX 0 :DRAW-MODE :LINE :BEZIER-SELECTOR1 (MAKE-INSTANCE (QUOTE PWGL-BEZIER-SELECTOR) :POINT-NUM 1) :BEZIER-SELECTOR2 (MAKE-INSTANCE (QUOTE PWGL-BEZIER-SELECTOR) :POINT-NUM 2) :CONNECTION-POINTS (LIST (MAKE-INSTANCE (QUOTE PWGL-CONNECTION-POINT-SELECTOR) :DX 0.1059965511702119D0 :DY -0.06571803124993214D0)) :CONNECTION-POINT (MAKE-INSTANCE (QUOTE PWGL-CONNECTION-POINT-SELECTOR) :DX 0.0 :DY 0.0)) (MAKE-INSTANCE (QUOTE PWGL-CONNECTION) :PWBOX1 12 :OUT-BOX 0 :PWBOX2 17 :INPUT-BOX 1 :DRAW-MODE :LINE :BEZIER-SELECTOR1 (MAKE-INSTANCE (QUOTE PWGL-BEZIER-SELECTOR) :POINT-NUM 1) :BEZIER-SELECTOR2 (MAKE-INSTANCE (QUOTE PWGL-BEZIER-SELECTOR) :POINT-NUM 2) :CONNECTION-POINTS (LIST (MAKE-INSTANCE (QUOTE PWGL-CONNECTION-POINT-SELECTOR) :DX -0.10550000828877071D0 :DY -0.24940000420063746D0)) :CONNECTION-POINT (MAKE-INSTANCE (QUOTE PWGL-CONNECTION-POINT-SELECTOR) :DX 0.0 :DY 0.0)) (MAKE-INSTANCE (QUOTE PWGL-CONNECTION) :PWBOX1 17 :OUT-BOX 0 :PWBOX2 15 :INPUT-BOX 0 :DRAW-MODE :LINE :BEZIER-SELECTOR1 (MAKE-INSTANCE (QUOTE PWGL-BEZIER-SELECTOR) :POINT-NUM 1) :BEZIER-SELECTOR2 (MAKE-INSTANCE (QUOTE PWGL-BEZIER-SELECTOR) :POINT-NUM 2) :CONNECTION-POINTS (LIST (MAKE-INSTANCE (QUOTE PWGL-CONNECTION-POINT-SELECTOR) :DX 0.22950000590458508D0 :DY 0.14460000772029158D0)) :CONNECTION-POINT (MAKE-INSTANCE (QUOTE PWGL-CONNECTION-POINT-SELECTOR) :DX 0.0 :DY 0.0)) (MAKE-INSTANCE (QUOTE PWGL-CONNECTION) :PWBOX1 16 :OUT-BOX 0 :PWBOX2 12 :INPUT-BOX 0 :DRAW-MODE :LINE :BEZIER-SELECTOR1 (MAKE-INSTANCE (QUOTE PWGL-BEZIER-SELECTOR) :POINT-NUM 1) :BEZIER-SELECTOR2 (MAKE-INSTANCE (QUOTE PWGL-BEZIER-SELECTOR) :POINT-NUM 2) :CONNECTION-POINTS (LIST (MAKE-INSTANCE (QUOTE PWGL-CONNECTION-POINT-SELECTOR) :DX 0.26575000262632953D0 :DY 0.2276000017598273D0)) :CONNECTION-POINT (MAKE-INSTANCE (QUOTE PWGL-CONNECTION-POINT-SELECTOR) :DX 0.0 :DY 0.0)) (MAKE-INSTANCE (QUOTE PWGL-CONNECTION) :PWBOX1 13 :OUT-BOX 0 :PWBOX2 16 :INPUT-BOX 0 :DRAW-MODE :LINE :BEZIER-SELECTOR1 (MAKE-INSTANCE (QUOTE PWGL-BEZIER-SELECTOR) :POINT-NUM 1) :BEZIER-SELECTOR2 (MAKE-INSTANCE (QUOTE PWGL-BEZIER-SELECTOR) :POINT-NUM 2) :CONNECTION-POINTS (LIST (MAKE-INSTANCE (QUOTE PWGL-CONNECTION-POINT-SELECTOR) :DX -0.2319999979697165D0 :DY -0.4213999982401724D0)) :CONNECTION-POINT (MAKE-INSTANCE (QUOTE PWGL-CONNECTION-POINT-SELECTOR) :DX 0.0 :DY 0.0)) (MAKE-INSTANCE (QUOTE PWGL-CONNECTION) :PWBOX1 16 :OUT-BOX 0 :PWBOX2 17 :INPUT-BOX 0 :DRAW-MODE :LINE :BEZIER-SELECTOR1 (MAKE-INSTANCE (QUOTE PWGL-BEZIER-SELECTOR) :POINT-NUM 1) :BEZIER-SELECTOR2 (MAKE-INSTANCE (QUOTE PWGL-BEZIER-SELECTOR) :POINT-NUM 2) :CONNECTION-POINTS (LIST (MAKE-INSTANCE (QUOTE PWGL-CONNECTION-POINT-SELECTOR) :DX 0.001250001136213541D0 :DY -0.11540000420063734D0)) :CONNECTION-POINT (MAKE-INSTANCE (QUOTE PWGL-CONNECTION-POINT-SELECTOR) :DX 0.0 :DY 0.0)) (MAKE-INSTANCE (QUOTE PWGL-CONNECTION) :PWBOX1 2 :OUT-BOX 0 :PWBOX2 4 :INPUT-BOX 0 :DRAW-MODE :LINE :BEZIER-SELECTOR1 (MAKE-INSTANCE (QUOTE PWGL-BEZIER-SELECTOR) :POINT-NUM 1) :BEZIER-SELECTOR2 (MAKE-INSTANCE (QUOTE PWGL-BEZIER-SELECTOR) :POINT-NUM 2) :CONNECTION-POINTS (LIST (MAKE-INSTANCE (QUOTE PWGL-CONNECTION-POINT-SELECTOR) :DX 2.0302832748342326D-9 :DY -0.38139999824017257D0)) :CONNECTION-POINT (MAKE-INSTANCE (QUOTE PWGL-CONNECTION-POINT-SELECTOR) :DX 0.0 :DY 0.0)) (MAKE-INSTANCE (QUOTE PWGL-CONNECTION) :PWBOX1 1 :OUT-BOX 0 :PWBOX2 2 :INPUT-BOX 0 :DRAW-MODE :LINE :BEZIER-SELECTOR1 (MAKE-INSTANCE (QUOTE PWGL-BEZIER-SELECTOR) :POINT-NUM 1) :BEZIER-SELECTOR2 (MAKE-INSTANCE (QUOTE PWGL-BEZIER-SELECTOR) :POINT-NUM 2) :CONNECTION-POINTS (LIST (MAKE-INSTANCE (QUOTE PWGL-CONNECTION-POINT-SELECTOR) :DX 0.5060000026263296D0 :DY 0.01459999922662969D0)) :CONNECTION-POINT (MAKE-INSTANCE (QUOTE PWGL-CONNECTION-POINT-SELECTOR) :DX 0.0 :DY 0.0))) :X 0 :Y 22 :WIDTH 1440 :HEIGHT 852))) (WINDOW-SELECT WIN) WIN)